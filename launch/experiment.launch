<?xml version="1.0"?>
<launch>

  <arg name="robot_name"             default="robot"/>

  <arg name="path_storage"           default=""/>
  <arg name="max_experiments"        default="10"/>

  <arg name="map_name"               default="simple_room"/>
  <arg name="use_amcl"               default="true"/>
  <arg name="global_planner"         default="navfn/NavfnROS"/>
  <arg name="local_planner"          default="base_local_planner/TrajectoryPlannerROS"/>
  <arg name="global_layers"          default="[ {name: static_layer, type: 'costmap_2d::StaticLayer'}, {name: obstacles_layer, type: 'costmap_2d::VoxelLayer'}, {name: inflation_layer, type: 'costmap_2d::InflationLayer'}]" />
  <arg name="local_layers"           default="[ {name: obstacles_layer, type: 'costmap_2d::VoxelLayer'}, {name: inflation_layer, type: 'costmap_2d::InflationLayer'}]"/>
  <arg name="observation_sources"    default="laser_scan_back_observation"/>

  <arg name="xy_goal_tolerance"      default="0.1"/>
  <arg name="yaw_goal_tolerance"     default="3.1415"/>
  <arg name="robot_vel"              default="0.3"/>
  <arg name="space_factor_tolerance" default="5"/>
  <arg name="time_factor_tolerance"  default="5"/>


<!-- ###################################################################### -->
<!-- ###################################################################### -->
<!-- ###################################################################### -->

  <!-- simulator -->
  <include file="$(find social_worlds)/launch/gazebo.launch" >
    <arg name="model" default="$(arg map_name)" />
    <arg name="enable_gui" default="false" />
  </include>

  <!-- robot -->
  <include file="$(find hera_description)/launch/load_description.launch" />

  <!-- navigation -->
  <include file="$(find hera_bringup)/launch/bring_up.launch" >
    <arg name="map_name"              default="$(arg map_name)"/>
    <arg name="use_amcl"              default="$(arg use_amcl)"/>
    <arg name="global_planner"        default="$(arg global_planner)"/>
    <arg name="local_planner"         default="$(arg local_planner)"/>
    <arg name="global_layers"         default="$(arg global_layers)"/>
    <arg name="local_layers"          default="$(arg local_layers)"/>
    <arg name="observation_sources"   default="$(arg observation_sources)"/>
    <arg name="xy_goal_tolerance"     default="$(arg xy_goal_tolerance)"/>
    <arg name="yaw_goal_tolerance"    default="$(arg yaw_goal_tolerance)"/>
    <arg name="enable_description"    default="false"/>
    <arg name="enable_map"            default="true"/>
    <arg name="enable_localization"   default="true"/>
    <arg name="enable_navigation"     default="true"/>
  </include>

  <!-- social_experiments -->
  <node name="social_experiments" pkg="social_experiments" type="social_experiments_node.py"
    output="screen" required="true">
    <param name="global_planner"            value="$(arg global_planner)"/>
    <param name="local_planner"             value="$(arg local_planner)"/>
    <param name="world_model_name"          value="$(arg map_name)"/>
    <param name="robot_model_name"          value="$(arg robot_name)"/>
    <param name="max_experiments"           value="$(arg max_experiments)"/>
    <param name="path_storage"              value="$(arg path_storage)"/>
    <param name="robot_vel"                 value="$(arg robot_vel)"/>
    <param name="space_factor_tolerance"    value="$(arg space_factor_tolerance)"/>
    <param name="time_factor_tolerance"     value="$(arg time_factor_tolerance)"/>
  </node>

  <!-- check robot collisions -->
  <node name="hera_check_collision" pkg="hera_description" type="hera_check_collision" output="screen">
    <param name="world_name" value="default"/>
    <param name="robot_name" value="$(arg robot_name)"/>
  </node>

  <!-- check_region -->
  <node name="check_region_forbidden" pkg="social_worlds" type="check_region_node" output="screen">
    <param name="robot_name" value="$(arg robot_name)"/>
    <param name="region_name" value="forbidden"/>
    <!-- <param name="region_name" value="start"/> -->
  </node>

  <!-- real time factor publisher -->
  <node name="real_time_factor_publisher_node" pkg="social_worlds" type="real_time_factor_publisher_node" output="screen">
    <param name="world_name" value="default"/>
  </node>

</launch>
